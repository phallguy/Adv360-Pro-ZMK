/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 46 47 48 49 50 51 60 61 62 63 64 66 65>;
            require-prior-idle-ms = <50>;
            retro-tap;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 39 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 70 69>;
            require-prior-idle-ms = <50>;
            retro-tap;
        };

        caps: caps {
            compatible = "zmk,behavior-hold-tap";
            label = "CAPS";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            flavor = "balanced";
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            quick-tap-ms = <200>;
        };

        shift_caps: shift_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_CAPS";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <65 70>;
            timeout-ms = <150>;
        };

        combo_left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <18 17>;
        };

        combo_left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <32 31>;
        };

        combo_left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <50 49>;
        };

        combo_right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <23 24>;
        };

        combo_right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <41 42>;
        };

        combo_right_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <55 56>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL                 &kp N1       &kp N2            &kp N3        &kp N4        &kp N5  &tog 2                                                                                                            &mo 3              &kp N6  &kp N7        &kp N8         &kp N9       &kp N0          &kp MINUS
&lt 1 TAB                 &kp Q        &kp W             &kp E         &kp R         &kp T   &kp C_VOL_UP                                                                                                      &kp LS(LA(EQUAL))  &kp Y   &kp U         &kp I          &kp O        &kp P           &kp BSLH
&kp ESCAPE                &hml LCMD A  &hml LALT S       &hml LSHFT D  &hml LCTRL F  &kp G   &kp C_VOL_DN  &ht LCMD LS(LG(LEFT_BRACKET))  &kp LS(LG(RIGHT_BRACKET))      &kp RIGHT_ALT      &kp RIGHT_COMMAND  &kp LS(LA(MINUS))  &kp H   &hmr RCTRL J  &hmr RSHIFT K  &hmr LALT L  &hmr RCMD SEMI  &kp SQT
&shift_caps LEFT_SHIFT 0  &kp Z        &kp X             &kp C         &kp V         &kp B                                                &none                          &none                                                    &kp N   &kp M         &kp COMMA      &kp DOT      &kp FSLH        &shift_caps RIGHT_SHIFT 0
&mo 2                     &kp GRAVE    &caps CAPSLOCK 0  &kp LEFT      &kp RIGHT             &kp SPACE     &kp BACKSPACE                  &none                          &kp RIGHT_CONTROL  &kp ENTER          &kp SPACE                  &kp DOWN      &kp UP         &kp LBKT     &kp RBKT        &mo 2
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans    &kp HOME  &kp END       &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans            &trans    &trans        &trans     &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans                                      &mo 3   &kp F6  &kp F7   &kp F8   &kp F9   &kp F10  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans   &trans   &trans   &trans   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &kp F5  &kp F10  &kp F11  &kp F12  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans   &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans   &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &trans        &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_DEC  &bl BL_INC  &none  &none  &none
            >;
        };
    };
};
